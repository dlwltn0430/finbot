from typing import List
from langchain_core.language_models import BaseChatModel
from langchain_core.tools import BaseTool

from domains.common.agents.states import AgentState

SAVING_ROUTER_PROMPT = """\
"""


def init_saving_router_node(
    llm: BaseChatModel,
    tools: List[BaseTool],
    system_prompt: str,
):

    llm_with_tools = llm.bind_tools(tools)

    async def node(state: AgentState):

        messages = [("system", system_prompt)] + state["messages"]
        response = await llm_with_tools.ainvoke(messages)

        return {"messages": [response]}

    return node
